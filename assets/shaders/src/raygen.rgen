#version 460
#extension GL_EXT_ray_tracing  : require

layout(set = 0, binding = 0) uniform accelerationStructureEXT TLAS;
layout(set = 0, binding = 1, rgba8) uniform image2D outImage;

layout(location = 0) rayPayloadEXT vec3 hitValue;

layout(set = 1, binding = 0) uniform CameraBufferRT
{
    mat4 inverseView;
    mat4 inverseProjection;
} camera;

void createRay(in vec2 screenUV, out vec4 origin, out vec4 direction)
{
    origin = camera.inverseView * vec4(0.0, 0.0, 0.0, 1.0);
    vec4 target = camera.inverseProjection * vec4(screenUV.x, screenUV.y, 1.0, 1.0);
    direction = camera.inverseView * vec4(normalize(target.xyz), 0.0);
}

void main() {
    const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    vec2 uv = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
    uv = uv * 2.0 - 1.0;

    // create ray origin and direction from camera data.
    vec4 origin, direction;
    createRay(uv, origin, direction);

    const uint rayFlags = gl_RayFlagsNoneEXT;
    const uint cullMask = 0xff;
    const uint sbtRecordOffset = 0;
    const uint sbtRecordStride = 0;
    const uint missIndex = 0;
    const float tmin = 0.001;
    const float tmax = 100.0;
    const int payload = 0;

    traceRayEXT(TLAS, rayFlags, cullMask, sbtRecordOffset, sbtRecordStride, missIndex, origin.xyz, tmin, direction.xyz, tmax, payload);

    imageStore(outImage, ivec2(gl_LaunchIDEXT.xy), vec4(hitValue, 1.0));
}
