#version 460
#extension GL_EXT_ray_tracing  : require

layout(set = 0, binding = 0) uniform accelerationStructureEXT TLAS;
layout(set = 0, binding = 1, rgba8) uniform image2D outImage;

layout(location = 0) rayPayloadEXT vec3 hitValue;

vec3 fakePerspective(vec2 screenUV, float aspect)
{
    vec3 u = normalize(vec3(5,0,-5));
    vec3 v = vec3(0,1,0);
    const float fov = 0.8;

    const float planeWidth = tan(fov * 0.5);

    u *= (planeWidth * aspect);
    v *= planeWidth;

    const vec3 rayDir = normalize(normalize(vec3(-5,0,-5)) + (u * screenUV.x) - (v * screenUV.y));
    return rayDir;
}


void main() {
    const vec2 pixelC = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    vec2 uv = pixelC / vec2(gl_LaunchSizeEXT.xy);
    uv = vec2(uv.x, 1.0 - uv.y) * 2.0 - 1.0;

    const vec4 origin = vec4(5.0, 0.0, 5.0, 0.0);
    const vec4 direction = vec4(fakePerspective(uv, 16.0/9.0), 0.0);

    const uint rayFlags = gl_RayFlagsNoneEXT;
    const uint cullMask = 0xff;
    const uint sbtRecordOffset = 0;
    const uint sbtRecordStride = 0;
    const uint missIndex = 0;
    const float tmin = 0.001;
    const float tmax = 100.0;
    const int payload = 0;

    traceRayEXT(TLAS, rayFlags, cullMask, sbtRecordOffset, sbtRecordStride, missIndex, origin.xyz, tmin, direction.xyz, tmax, payload);

    imageStore(outImage, ivec2(gl_LaunchIDEXT.xy), vec4(hitValue, 1.0));
}
